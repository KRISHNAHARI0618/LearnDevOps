Integrating Jenkins with Hashi-Corp Vault:

1: Install Java + Jenkins in One EC2
2: Install Hashi-Corp Vault in Another EC2
3: Install Hashi-Corp Vault Plugin in Jenkins
4: Store Credentials in Vault
5: Configure Vault Secrets

Manage Jenkins --> Configure Systems --> Vault Plugin --> Give URL of Vault Server --> Give which credentials should use --> Use those in Pipeline

Another Ways to Pass Secrets:

1: We can Create Environment Variables
2: We can Create Credentials in Credentials section

Jenkins Roles and Users:
1: Enable Role Based Authorization in Jenkins
2: Users and Roles

How to retrieve the the forgotten password:
    0: stop the jenkins
    1: Go to /var/lib/jenkins
    2: see the list of files --ls
    3: first file config.xml
    4: Edit the config.xml file vim config.xml
    5: go to use Security section set the action to false
    6: then start the jenkins again

Ansible Role Based Access:
    Manage jenkins and git to plugins
    Role Based Authorized Plugin
    install plugin and restart

Again Go to Manage Jenkins:
    Click Security --> Authentication
    Security Realm --> jenkins Own users database
    Authorization --> Role Based Strategy and save
we can limit the users roles using manage roles in jenkins

Commonly Used Plugins:
    envinject
    ssh-agent
    cloudbees
    pulish-over-ssh
    ssh-server
    rebuilder
    github webhook

How to inject Environment Variables:
pipeline {
    agent{ label 'sbt' }
    parameters {
        string(defaultValue: "",description:"mention the decription",name:"name of the parameter")
        choice(name:"choicename",decription:"the detailed description",defaultValue:"the value for that name")
        boolean(name:"bolean value",decription:"the value decription of value",defaultValue:"true/false")
    }

    stages{
        stage('give environment variable') {
            steps{
                script{
                    name = "peddireddy"
                }
            }
        }
        stage('test environment variable'){
            steps{
                script{
                    echo "testing my script $(name)"
                }
            }
        }

    }
   }

ssh -i <locationofprivatekey> username@ipaddress

How to Make Github Connect using SSH:
    public key and private key




































Docker-Desktop
Minikube
kubectl
helm
Argo-cd
Prometheus
Grafana