Jenkins Interview Questions:

What is Jenkins:
    Jenkins is a self-contained, open source automation server which can be used to automate all sorts of tasks related to building, testing, and delivering or deploying software.
    It is Written in java
    It Has More built in plugings which is extensible use for continuous integration

Define The Process Process of Jenkins:
1: Commit The Changes
2: Detect source code changes
3: The build Either passes or fails
4: generate Feedback

Benefits of Jenkins:
    1: Cache Build Failures
    2: Automatic build report notification
    3: Achieves Continuous Integration
    4: Automation of Maven Project
    5: Easy Tracking of bugs
    6: Version Control
    7: Reusability
    8: Parallel Execution
    9: Visualization
    10: Shared Libraries
    11: Secrets Management
    12: Multiple Agents
    13: Open Source
    14: Multi-Branch

Pre-Requisites & Main Components integrated with:
1: Java and Git

What is Maven ? Benefit of Integrating with jenkins:
1: Build Management Tool

How will you define Post Section in jenkins:

What is Post Section:
    Post is a Section which contains several additional steps that might execute after the completion of the pipeline
    Cleaning the Workspace
    Mailing the user based on results
    Always fail
    always success
    changed
    aborted
    scripted

How to do parameters in jenkins:
    0: Parameters are like key value apirs used to support various use cases while running the jenkins pipelines
    1: there is parameters sections
    2: There are different parameters
    3: Password
    4: String
    5: Boolean
    6: text
    7: Choice

parameters {
    string (name: 'hari',defaultValue: 'hari_vardhan', description: 'Hello To everyone')
}

How does Jenkins Authenticate users:
1: IAM Role
2: Matrix Based Access Control
3: Username and password
4: Role Based Access Control
5: Project Based Security

Name the environment variable used in Shell Script :
What are Default Variables:
Default Variables:
1: $JOB_NAME
2: $NODE_NAME
3: $WORKSPACE
4: $BUILD_URL
5: $JENKINS_URL
6: $BUILD_ID
7: $git_commit

What is DSL Jenkins:
The domain specific language and Jenkins plugin

What are Active and Reactive parameters or Dynamic Parameters in Jenkins:
we can use build with parameters section in jenkins pipeline
based on the one dropdown another dropdown will get changed in build with parameters section it is called Active and Reactive parameters
1: Manage Jenkins
2: Active Choices plugin
3: Click Configure
4: Add Parameters
5: Select Active Choice Parameters
6: Groovy Script - return['Production','QA','Development']
7: Add Reactive Choice Parameters
8: if(env.equals('Production')) {
    return['Prod1']
    else if(env.equals('QA')){
        return['QA1','QA2']
    }
    else if(env.equals["Development"]){
        return['Dev1','Dev2']
    }
    else {
        return ['Select a Server From DropDown']
    }
}
9: referenced parameter : env

What is Groovy:
Native Scripting Language language for Jenkins

How to Clone A repository:
Enter email and username
git config --global user.name "hari"
git config --global user.email "mail-id"

How to Create a Backup and copy files in Jenkins:
To create a backup of jenkins you need to do periodically backup your jenkins_home directory

Thin Back Plugin (Manually Triggered)
Cron Tab / Shell Script (Cron Job particular time)
Create a Snapshots in Cloud Providers
(Every Time stopping or when server us not responding )

Monitoring and Logging with Prometheus and Grafana:
Jenkins Prometheus Plugin expose an endpoint (default /prometheus/) with metrics where a Prometheus Server can scrape.

How to Secure Jenkins Server:
1: Authentication
2: Authorization
3: Security Realms
4: Role Based Access Controls
5: Run Periodically Security Runs

How can you deploy a custom build of a core plugin:
1: Stop Jenkins
2: Copy the custom HPI to Jenkins Home/plugins
3: Delete the previously Expanded plugin directory
4: Make an Empty file called plugin.hpi.pinned
5: restart jenkins

How to Store Secrets in Jenkins:
using Hashi-Corp Vault
using global variables
using credentials sections
secret file
secret text
github app
username with password
ssh with private key etc...

How many ways we Scheduled a Build in Jenkins:
1: Build after other projects are built
2: Build periodically
3: Generic Webhook Trigger
4: GitHub Branches
5: GitHub Pull Requests
6: GitHub hook trigger for GITScm polling
7: Monitor Docker Hub/Registry for image changes
8: Poll SCM
9: Quiet period
10: Trigger builds remotely (e.g., from scripts)

What is a Trigger:
Triggers are used to define when and hoe pipelines should be executed

Restart From Stage:

How to Set jenkins build to fail based specific word in console output:
pipeline{
    agent{
        docker{
            image 'openjdk:11'
        }
    }
    stages{
        stage("build"){
            sh 'chmod +x gradlew'
            sh './gradlew build | tee output.log'

        }
        stage("Check") {
            sh '! grep "task" output.log'
        }
    }
}

Can you provide an example of a time when you troubleshooted and optimized a CI-CD pipeline? What steps did you take and what was the outcome:

1: Issue : The pipeline has slow build process

What are all files required for NodeJs Image Build:
Index.js
Package.json
and web files

In index.js we configure port number
in package.json file we define what file should run

How to Customize the build number display to something else in jenkins job page:
Using env Variables in Jenkins we can customize
env variable--> Current Build --> Display Name
currentBuild.displayName="Final Demo # "+ currentBuild.Number

What are Multi Branch Pipeline:

There are Multiple Branches n One organization for one application we create a jenkins file for each file and configure it to Jenkins multi branch pipeline then automatically creates a job for each branch if Jenkins file is not present it will skip that branch

It enable you to implement different jenkins files for different branches of the same project

1: Create a Multi-Branch pipeline in jenkins ui

Automatic Branch Detection
Automatic Job Creation
Isolation of Builds
Dynamic and Scalable
Configuration in Jenkinsfile

Advantages:
1: Automatic Branch Management
2: Continuous Integration
3: Isolation
4: Visibility

Types of Projects/Jobs:
1: Freestyle
2: Multibranch Pipeline
3: Pipeline
4: External Job
5: Organization
6: Multi configuration

Jenkins File :
it is also called as pipeline as a code
1: Versioned
2: Code stored in source repository
3: it is code written in groovy language

What are Shared Libraries:
when some lines of code is repeated all the pipelines/jenkins file for multiple pipelines we can centralize that line of code into shared libraries Refer when it is required

1: Configure Systems
2: Global Shared Libraries
3: Give the git where Library is present
4: def call()
5: @Library('Shared Library Name')

Resources:
Handlers:
Vars:
def call('')
@Library('Library Name')

What Type of Jenkins File you worked on:
1: FreeStyle
2: Pipeline --> Declarative,Scriptive

In Master Slave Setup:
agent{label 'my-label'}

Importance of Secrets:
Global Credentials
Secret text

Can we have job for Pull Request and once merge is done the source branch should be deleted :

Difference Between FreeStyle and Pipeline

Most Common Plugins Used in Jenkins:
Maven
Sonar Scanner
Nexus
Kubernetes
Dockers
Hashi-Corp Vault
Github
Git-Hooks
SSH Credentials
OWASP Dependency Plugin
envinject
ssh-agent
cloudbees
pulish-over-ssh
ssh-server
rebuilder
github webhook
Active Choices Plugin

How to distribute jenkins pipeline using jenkins
Using Agents Sections in that Node Section

What is Agent:
Agent Is a Machine where our jobs can run
we can use same jenkins server as a agent

What is artifactory :
Parallel Stages in jenkins pipeline:
For Testing on multiple OS systems we will use Parallel Sections/Block
1: One will run in windows agent
2: Another will run on Linux Systems

Indent rainbow Extensions
Jenkinsfile:
pipeline {
    agent none
    agent any
    agent { label 'my-defined-label' }
    agent { node { label 'my-defined-label'} }
    agent {
        docker {
            image 'maven:3.9.3-eclipse'
            label 'my-defined-label'
            args '-v /tmp:/tmp'
        }
    }
    agent {
        docker {
            image 'myregistry.com/node'
            label 'my-defined-label'
            registryUrl 'https://myregistry.com/'
            registryCredentialsId 'myPredefinedCredentialsInJenkins'
        }
    }
    options {
        timeout( time: 1, unit: 'HOURS')
        retry(3)
        timestamps()
    }
    tools{
        jdk 'jdk'
        nodejs 'nodejs'
    }
    stages {
        stage('Run Tests') {
            parallel {
                stage('Test On Windows') {
                    agent {
                        label "windows"
                    }
                    steps {
                        bat "run-tests.bat"
                    }
                    post {
                        always {
                            junit "**/TEST-*.xml"
                        }
                    }
                }
                stage('Test On Linux') {
                    agent {
                        label "linux"
                    }
                    steps {
                        sh "run-tests.sh"
                    }
                    post {
                        always {
                            junit "**/TEST-*.xml"
                        }
                    }
                }
            }
        }
    }
}

Explain Complete CI-CD Setup In your Project:

From: GitHub
To: Kubernetes
    1: Git Checkout
    2: Continuous Integration
    1: Build and Unit Text
    2: Code Scanning - SonarQube
    3: Build Artifacts - Code Scan
    4: Image Building
    5: Image Scanning
    6: Image Push
3: Build Tools: NpM for Node, Maven for Java, PyBuilder for Python,Go mod For go lang
4: Helm Repository Updates in different GitHub Repo
5: Deploy in Kubernetes

MultiBranch pipeline we use choice parameters

% TroubleShooting Jenkins Servers:

OutOfMemory Issues:
1: Jenkins id growing in data size requiring a bigger heap space in this case you just want to give it a bigger heap
2: If the jenkins are generating large amount of data
---
Docker Agent is not configured in Jenkins:
1: i have not added jenkins user in docker group then i have faced issue while building image
---
    1: Job Failures: Issue in build jobs or pipelines are failing
    2: Performance Issues:
    Jenkins is slow or unresponsive.
    3: Node Connectivity: SSH and Egress is not allowed
    Nodes (build agents) are not connecting or going offline.
    4: Plugin Compatibility: Plugins are not working or causing issues.
    5: Authentication and Authorization: Users are unable to log in or encounter permission issues.
    6: Build Environment Issues: Builds are failing due to missing dependencies or incorrect environment settings.
    7: Jenkins Upgrade Issues: Problems arise after upgrading Jenkins.
    8: Disk Space Issues: Jenkins is running out of disk space.
    9: Logging and Debugging: Unable to identify the root cause of a problem.
    10: Security Vulnerabilities: Security vulnerabilities are identified in Jenkins.

    1: OutOfMemoryError: Your Jenkins may encounter out of memory issue due to installing heavy plugins etc..
    2: One time we got issue with out of memory when we created the machine with less memory then the jobs got not executed due to java

cmd ["java", "-Xmx2048m", "-Xms512m", "-jar", "jenkins.war"]

Xmx == Maximum heap size 2048m
Xms == Initial Heap size 512m

Java Can take more memory when we are not building the application based on variable and objects class will not take memory
